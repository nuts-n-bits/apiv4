/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var include_support_pb = require('../include/support_pb.js');
goog.object.extend(proto, include_support_pb);
var include_page_pb = require('../include/page_pb.js');
goog.object.extend(proto, include_page_pb);
var include_user_pb = require('../include/user_pb.js');
goog.object.extend(proto, include_user_pb);
var include_revision_pb = require('../include/revision_pb.js');
goog.object.extend(proto, include_revision_pb);
goog.exportSymbol('proto.apiv4.feed.Feed_metadata', null, global);
goog.exportSymbol('proto.apiv4.feed.Feed_with_rendering_elements', null, global);
goog.exportSymbol('proto.apiv4.feed.Request_feed_metadata_by_name', null, global);
goog.exportSymbol('proto.apiv4.feed.Request_feed_rendering_elements_by_name', null, global);
goog.exportSymbol('proto.apiv4.feed.Request_feed_rendering_elements_by_name.Request_amount_ceiling', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.apiv4.feed.Feed_metadata = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.apiv4.feed.Feed_metadata, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.apiv4.feed.Feed_metadata.displayName = 'proto.apiv4.feed.Feed_metadata';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.apiv4.feed.Feed_with_rendering_elements = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.apiv4.feed.Feed_with_rendering_elements.repeatedFields_, null);
};
goog.inherits(proto.apiv4.feed.Feed_with_rendering_elements, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.apiv4.feed.Feed_with_rendering_elements.displayName = 'proto.apiv4.feed.Feed_with_rendering_elements';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.apiv4.feed.Request_feed_rendering_elements_by_name = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.apiv4.feed.Request_feed_rendering_elements_by_name, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.apiv4.feed.Request_feed_rendering_elements_by_name.displayName = 'proto.apiv4.feed.Request_feed_rendering_elements_by_name';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.apiv4.feed.Request_feed_metadata_by_name = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.apiv4.feed.Request_feed_metadata_by_name, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.apiv4.feed.Request_feed_metadata_by_name.displayName = 'proto.apiv4.feed.Request_feed_metadata_by_name';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.apiv4.feed.Feed_metadata.prototype.toObject = function(opt_includeInstance) {
  return proto.apiv4.feed.Feed_metadata.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.apiv4.feed.Feed_metadata} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apiv4.feed.Feed_metadata.toObject = function(includeInstance, msg) {
  var f, obj = {
    feedIdBis: jspb.Message.getFieldWithDefault(msg, 1, ""),
    namespace: jspb.Message.getFieldWithDefault(msg, 2, ""),
    feedName: jspb.Message.getFieldWithDefault(msg, 3, ""),
    feedCreationTimeIso: jspb.Message.getFieldWithDefault(msg, 4, ""),
    creator: (f = msg.getCreator()) && include_user_pb.User_public_model.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.apiv4.feed.Feed_metadata}
 */
proto.apiv4.feed.Feed_metadata.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.apiv4.feed.Feed_metadata;
  return proto.apiv4.feed.Feed_metadata.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.apiv4.feed.Feed_metadata} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.apiv4.feed.Feed_metadata}
 */
proto.apiv4.feed.Feed_metadata.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setFeedIdBis(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setNamespace(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setFeedName(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setFeedCreationTimeIso(value);
      break;
    case 5:
      var value = new include_user_pb.User_public_model;
      reader.readMessage(value,include_user_pb.User_public_model.deserializeBinaryFromReader);
      msg.setCreator(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.apiv4.feed.Feed_metadata.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.apiv4.feed.Feed_metadata.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.apiv4.feed.Feed_metadata} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apiv4.feed.Feed_metadata.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFeedIdBis();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getNamespace();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getFeedName();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getFeedCreationTimeIso();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getCreator();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      include_user_pb.User_public_model.serializeBinaryToWriter
    );
  }
};


/**
 * optional string feed_id_bis = 1;
 * @return {string}
 */
proto.apiv4.feed.Feed_metadata.prototype.getFeedIdBis = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.apiv4.feed.Feed_metadata.prototype.setFeedIdBis = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string namespace = 2;
 * @return {string}
 */
proto.apiv4.feed.Feed_metadata.prototype.getNamespace = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.apiv4.feed.Feed_metadata.prototype.setNamespace = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string feed_name = 3;
 * @return {string}
 */
proto.apiv4.feed.Feed_metadata.prototype.getFeedName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.apiv4.feed.Feed_metadata.prototype.setFeedName = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string feed_creation_time_iso = 4;
 * @return {string}
 */
proto.apiv4.feed.Feed_metadata.prototype.getFeedCreationTimeIso = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.apiv4.feed.Feed_metadata.prototype.setFeedCreationTimeIso = function(value) {
  jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional apiv4.user.User_public_model creator = 5;
 * @return {?proto.apiv4.user.User_public_model}
 */
proto.apiv4.feed.Feed_metadata.prototype.getCreator = function() {
  return /** @type{?proto.apiv4.user.User_public_model} */ (
    jspb.Message.getWrapperField(this, include_user_pb.User_public_model, 5));
};


/** @param {?proto.apiv4.user.User_public_model|undefined} value */
proto.apiv4.feed.Feed_metadata.prototype.setCreator = function(value) {
  jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.apiv4.feed.Feed_metadata.prototype.clearCreator = function() {
  this.setCreator(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apiv4.feed.Feed_metadata.prototype.hasCreator = function() {
  return jspb.Message.getField(this, 5) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.apiv4.feed.Feed_with_rendering_elements.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.apiv4.feed.Feed_with_rendering_elements.prototype.toObject = function(opt_includeInstance) {
  return proto.apiv4.feed.Feed_with_rendering_elements.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.apiv4.feed.Feed_with_rendering_elements} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apiv4.feed.Feed_with_rendering_elements.toObject = function(includeInstance, msg) {
  var f, obj = {
    feedMeta: (f = msg.getFeedMeta()) && proto.apiv4.feed.Feed_metadata.toObject(includeInstance, f),
    feedRenderList: jspb.Message.toObjectList(msg.getFeedRenderList(),
    include_page_pb.Page_with_rendering_elements.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.apiv4.feed.Feed_with_rendering_elements}
 */
proto.apiv4.feed.Feed_with_rendering_elements.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.apiv4.feed.Feed_with_rendering_elements;
  return proto.apiv4.feed.Feed_with_rendering_elements.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.apiv4.feed.Feed_with_rendering_elements} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.apiv4.feed.Feed_with_rendering_elements}
 */
proto.apiv4.feed.Feed_with_rendering_elements.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.apiv4.feed.Feed_metadata;
      reader.readMessage(value,proto.apiv4.feed.Feed_metadata.deserializeBinaryFromReader);
      msg.setFeedMeta(value);
      break;
    case 2:
      var value = new include_page_pb.Page_with_rendering_elements;
      reader.readMessage(value,include_page_pb.Page_with_rendering_elements.deserializeBinaryFromReader);
      msg.addFeedRender(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.apiv4.feed.Feed_with_rendering_elements.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.apiv4.feed.Feed_with_rendering_elements.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.apiv4.feed.Feed_with_rendering_elements} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apiv4.feed.Feed_with_rendering_elements.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFeedMeta();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.apiv4.feed.Feed_metadata.serializeBinaryToWriter
    );
  }
  f = message.getFeedRenderList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      include_page_pb.Page_with_rendering_elements.serializeBinaryToWriter
    );
  }
};


/**
 * optional Feed_metadata feed_meta = 1;
 * @return {?proto.apiv4.feed.Feed_metadata}
 */
proto.apiv4.feed.Feed_with_rendering_elements.prototype.getFeedMeta = function() {
  return /** @type{?proto.apiv4.feed.Feed_metadata} */ (
    jspb.Message.getWrapperField(this, proto.apiv4.feed.Feed_metadata, 1));
};


/** @param {?proto.apiv4.feed.Feed_metadata|undefined} value */
proto.apiv4.feed.Feed_with_rendering_elements.prototype.setFeedMeta = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.apiv4.feed.Feed_with_rendering_elements.prototype.clearFeedMeta = function() {
  this.setFeedMeta(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.apiv4.feed.Feed_with_rendering_elements.prototype.hasFeedMeta = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated apiv4.page.Page_with_rendering_elements feed_render = 2;
 * @return {!Array<!proto.apiv4.page.Page_with_rendering_elements>}
 */
proto.apiv4.feed.Feed_with_rendering_elements.prototype.getFeedRenderList = function() {
  return /** @type{!Array<!proto.apiv4.page.Page_with_rendering_elements>} */ (
    jspb.Message.getRepeatedWrapperField(this, include_page_pb.Page_with_rendering_elements, 2));
};


/** @param {!Array<!proto.apiv4.page.Page_with_rendering_elements>} value */
proto.apiv4.feed.Feed_with_rendering_elements.prototype.setFeedRenderList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.apiv4.page.Page_with_rendering_elements=} opt_value
 * @param {number=} opt_index
 * @return {!proto.apiv4.page.Page_with_rendering_elements}
 */
proto.apiv4.feed.Feed_with_rendering_elements.prototype.addFeedRender = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.apiv4.page.Page_with_rendering_elements, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.apiv4.feed.Feed_with_rendering_elements.prototype.clearFeedRenderList = function() {
  this.setFeedRenderList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.apiv4.feed.Request_feed_rendering_elements_by_name.prototype.toObject = function(opt_includeInstance) {
  return proto.apiv4.feed.Request_feed_rendering_elements_by_name.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.apiv4.feed.Request_feed_rendering_elements_by_name} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apiv4.feed.Request_feed_rendering_elements_by_name.toObject = function(includeInstance, msg) {
  var f, obj = {
    feedName: jspb.Message.getFieldWithDefault(msg, 1, ""),
    namespace: jspb.Message.getFieldWithDefault(msg, 2, ""),
    requestAmountCeiling: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.apiv4.feed.Request_feed_rendering_elements_by_name}
 */
proto.apiv4.feed.Request_feed_rendering_elements_by_name.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.apiv4.feed.Request_feed_rendering_elements_by_name;
  return proto.apiv4.feed.Request_feed_rendering_elements_by_name.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.apiv4.feed.Request_feed_rendering_elements_by_name} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.apiv4.feed.Request_feed_rendering_elements_by_name}
 */
proto.apiv4.feed.Request_feed_rendering_elements_by_name.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setFeedName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setNamespace(value);
      break;
    case 3:
      var value = /** @type {!proto.apiv4.feed.Request_feed_rendering_elements_by_name.Request_amount_ceiling} */ (reader.readEnum());
      msg.setRequestAmountCeiling(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.apiv4.feed.Request_feed_rendering_elements_by_name.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.apiv4.feed.Request_feed_rendering_elements_by_name.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.apiv4.feed.Request_feed_rendering_elements_by_name} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apiv4.feed.Request_feed_rendering_elements_by_name.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFeedName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getNamespace();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getRequestAmountCeiling();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.apiv4.feed.Request_feed_rendering_elements_by_name.Request_amount_ceiling = {
  _10: 0,
  _20: 1,
  _25: 2,
  _50: 3,
  _100: 4
};

/**
 * optional string feed_name = 1;
 * @return {string}
 */
proto.apiv4.feed.Request_feed_rendering_elements_by_name.prototype.getFeedName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.apiv4.feed.Request_feed_rendering_elements_by_name.prototype.setFeedName = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string namespace = 2;
 * @return {string}
 */
proto.apiv4.feed.Request_feed_rendering_elements_by_name.prototype.getNamespace = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.apiv4.feed.Request_feed_rendering_elements_by_name.prototype.setNamespace = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional Request_amount_ceiling request_amount_ceiling = 3;
 * @return {!proto.apiv4.feed.Request_feed_rendering_elements_by_name.Request_amount_ceiling}
 */
proto.apiv4.feed.Request_feed_rendering_elements_by_name.prototype.getRequestAmountCeiling = function() {
  return /** @type {!proto.apiv4.feed.Request_feed_rendering_elements_by_name.Request_amount_ceiling} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {!proto.apiv4.feed.Request_feed_rendering_elements_by_name.Request_amount_ceiling} value */
proto.apiv4.feed.Request_feed_rendering_elements_by_name.prototype.setRequestAmountCeiling = function(value) {
  jspb.Message.setProto3EnumField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.apiv4.feed.Request_feed_metadata_by_name.prototype.toObject = function(opt_includeInstance) {
  return proto.apiv4.feed.Request_feed_metadata_by_name.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.apiv4.feed.Request_feed_metadata_by_name} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apiv4.feed.Request_feed_metadata_by_name.toObject = function(includeInstance, msg) {
  var f, obj = {
    feedName: jspb.Message.getFieldWithDefault(msg, 1, ""),
    namespace: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.apiv4.feed.Request_feed_metadata_by_name}
 */
proto.apiv4.feed.Request_feed_metadata_by_name.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.apiv4.feed.Request_feed_metadata_by_name;
  return proto.apiv4.feed.Request_feed_metadata_by_name.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.apiv4.feed.Request_feed_metadata_by_name} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.apiv4.feed.Request_feed_metadata_by_name}
 */
proto.apiv4.feed.Request_feed_metadata_by_name.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setFeedName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setNamespace(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.apiv4.feed.Request_feed_metadata_by_name.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.apiv4.feed.Request_feed_metadata_by_name.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.apiv4.feed.Request_feed_metadata_by_name} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.apiv4.feed.Request_feed_metadata_by_name.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFeedName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getNamespace();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string feed_name = 1;
 * @return {string}
 */
proto.apiv4.feed.Request_feed_metadata_by_name.prototype.getFeedName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.apiv4.feed.Request_feed_metadata_by_name.prototype.setFeedName = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string namespace = 2;
 * @return {string}
 */
proto.apiv4.feed.Request_feed_metadata_by_name.prototype.getNamespace = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.apiv4.feed.Request_feed_metadata_by_name.prototype.setNamespace = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


goog.object.extend(exports, proto.apiv4.feed);
