syntax = "proto3";

package apiv4.page;

import "revision.proto";

message Page_metadata {

    string page_name = 1;
    string namespace = 2;
    string language_code = 3;
    string page_id_bis = 4;
    string creation_time_iso = 5;
    string update_time_iso = 6;
    string license_name = 7;
    string page_content_model = 8;
    string event_id_bis = 9;
    string creator_display_name = 10;
    string creator_id_name = 11;
    string current_editor_display_name = 12;
    string current_editor_id_name = 13;
    bool deleted = 14;

    bool page_is_stripped = 15;
}

message Page_with_rendering_elements {
    
    Page_metadata page_meta = 1;
    apiv4.revision.Revision_metadata rev_meta = 2;
    string content = 3;
}

message Request_page_rendering_elements_by_apparent_name {
    // apparent pagename e.g. "meta/discussion" is a page named "discussion" under namespace 5 ("meta")
    // apparent pagename can be resolved into a namespace number and a page name by server
    // it is possible to have page named in the shape of "not-a-namespace/pagename".
    // in this case the entire page name is "not-a-namespace/pagename" and the namespace is 0 (default).
    string apparent_page_name = 1;
    string sid = 2;
    string ssec = 3;
}

message Request_page_metadata_by_name {

    string page_name = 1;
    string sid = 2;
    string ssec = 3;
}

message Request_create_or_edit_page {

    string page_name = 1;  // Apparent page name. Namespace resolved by server
    string content = 2;
    string revision_comment = 3;
    Visibility visibility = 4;
    string language_code = 5;
    string license_name = 6;
    string sid_bis = 7;
    string ssec_bis = 8;

    enum Visibility {
        all_visible = 0;
        admin_visible = 1;  // Up to namespace-specific business logic to determine how to enforce.
        self_visible = 2;  // Ditto, up to namespace-specific logic to determine if possible.
    }
}

message Request_history_rendering_elements_by_apparent_page_name {

    string apparent_page_name = 1;
    Direction direction = 2;
    oneof start_from {
        string start_from_rev_id_bis = 3;
        string start_from_timestamp_iso = 4;
    }
    reserved 5;
    int32 request_amount = 6;
    string sid = 7;
    string ssec = 8;

    enum Direction {
        new_to_old = 0;
        old_to_new = 1;
    }
}

message Page_history_with_rendering_elements {

    string pagename = 1;
    string ns_name = 2;
    string ns_id_bis = 3;
    repeated apiv4.revision.Revision_metadata rev_meta = 4;
}

message Page_create_or_edit_report {

    string pid_bis = 1;
    string apparent_page_name = 2;
    string revision_bis = 3;
}

message Request_delete_page_by_apparent_name {
    
    string apparent_page_name = 1;
    string summary = 2;
    string sid = 3;
    string ssec = 4;
}

message Page_deletion_report {

    string pid_bis = 1;
    string apparent_page_name = 2;
}

message Request_move_page_by_apparent_name {

    string original_apparent_page_name = 1;
    string new_apparent_page_name = 2;
    bool create_redirection_page = 3;
    Conflict_resolution_strategy conflict_resolution = 4;
    string summary = 5;
    string sid = 6;
    string ssec = 7;
    
    enum Conflict_resolution_strategy {
        abort = 0;
        delete_target_page = 1;
    }
}

message Page_move_report {
    
    string page_id_bis = 3;
}