syntax = "proto3";

package apiv4.page;

import "revision.proto";

message Page {

    string page_name = 1;
    bytes namespace_id_bb = 2;
    string language_code = 3;
    bytes page_id_bb = 4;
    bytes creation_time_unix_mil_bb = 5;
    bytes update_time_unix_mil_bb = 6;
    string license_name = 7;
    string page_content_model = 8;
    bytes event_id_bb = 9;
    string creator_display_name = 10;
    string creator_id_name = 11;
    string current_editor_display_name = 12;
    string current_editor_id_name = 13;
    string page_config = 14;
    bool deleted = 15;
    bool page_is_stripped = 16;
    string namespace_name = 17;
    bytes current_revision_id_bb = 18;
    apiv4.revision.RevisionMetadata rev_meta = 19;
    string content = 20;
}

message PageReq {

    reserved 1;
    bytes ssec = 2;
    string apparent_page_name = 3;
    bytes revision_id_bb = 4;
    bytes page_id_bb = 5;
    string exclude_revision_metadata = 6;
    string exclude_contents = 7;
}

message PageEditReq {

    reserved 1;
    bytes ssec = 2;
    oneof ident {
        string apparent_page_name = 3; 
        bytes page_id_bb = 4;
    }
    string content = 5;
    string revision_comment = 6;
    Visibility visibility = 7;
    string language_code = 8;
    string license_name = 9;
    bool do_not_create_if_not_exist = 10;

    enum Visibility {
        all_visible = 0;
        admin_visible = 1;  // Up to namespace-specific business logic to determine how to enforce.
        self_visible = 2;  // Ditto, up to namespace-specific logic to determine if possible.
    }
}

message PageEditRes {

    bytes page_id_bb = 1;
    string apparent_page_name = 2;
    bytes revision_id_bb = 3;
}

message PageHistReq {

    reserved 1;
    bytes ssec = 2;

    oneof ident {
        string apparent_page_name = 3;
        bytes page_id_bb = 9;
    }
    bytes smallest_date_unix_millis_bb = 4;
    bytes biggest_date_unix_millis_bb = 5;
    bytes smallest_id_bb = 6;
    bytes biggest_id_bb = 7;
    int32 request_amount_suggestion = 8;
}

message PageHistRes {

    string pagename = 1;
    string ns_name = 2;
    bytes ns_id_bb = 3;
    repeated apiv4.revision.RevisionMetadata rev_meta = 4;
}

message PageDeleteReq {
    
    reserved 1;
    bytes ssec = 2;
    string apparent_page_name = 3;
    string summary = 4;
}

message PageDeleteRes { 

    bytes page_id_bb = 1;
    string apparent_page_name = 2;
}

message PageMoveReq {

    reserved 1; 
    bytes ssec = 2;

    string original_apparent_page_name = 3;
    string new_apparent_page_name = 4;
    bool create_redirection_page = 5;
    OnConflict on_conflict = 6;
    string summary = 7;

    
    enum OnConflict {
        abort = 0;
        delete_target_page = 1;
    }
}

message PageMoveRes {
    
    bytes page_id_bb = 3;
}


message PageEditConfigReq {
    
    reserved 1; 
    bytes ssec = 2;
    string apparent_page_name = 3;
    bytes page_id_bb = 4;
    string comment = 5;

    oneof what_to_change {
        string new_license_name = 6;
        string new_language_code = 7;
        string new_content_model = 8;
        string new_config = 9;
    }
}